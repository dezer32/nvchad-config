return {
  -- File marks and quick navigation
  {
    "ThePrimeagen/harpoon",
    branch = "harpoon2",
    dependencies = { "nvim-lua/plenary.nvim" },
    keys = {
      { "<leader>ha", function() require("harpoon"):list():add() end, desc = "Harpoon Add File" },
      { "<leader>hh", function() require("harpoon").ui:toggle_quick_menu(require("harpoon"):list()) end, desc = "Harpoon Quick Menu" },
      { "<leader>h1", function() require("harpoon"):list():select(1) end, desc = "Harpoon File 1" },
      { "<leader>h2", function() require("harpoon"):list():select(2) end, desc = "Harpoon File 2" },
      { "<leader>h3", function() require("harpoon"):list():select(3) end, desc = "Harpoon File 3" },
      { "<leader>h4", function() require("harpoon"):list():select(4) end, desc = "Harpoon File 4" },
      { "<leader>hp", function() require("harpoon"):list():prev() end, desc = "Harpoon Previous" },
      { "<leader>hn", function() require("harpoon"):list():next() end, desc = "Harpoon Next" },
    },
    config = function()
      require("harpoon"):setup()
    end,
  },

  -- Code outline
  {
    "hedyhli/outline.nvim",
    cmd = { "Outline", "OutlineOpen" },
    keys = {
      { "<leader>o", "<cmd>Outline<CR>", desc = "Toggle Outline" },
    },
    opts = {
      outline_window = {
        position = "right",
        width = 25,
        relative_width = true,
        auto_close = false,
        auto_jump = false,
        jump_highlight_duration = 300,
        center_on_jump = true,
        show_numbers = false,
        show_relative_numbers = false,
        wrap = false,
        show_cursorline = true,
        hide_cursor = false,
        focus_on_open = true,
        winhl = "",
      },
      outline_items = {
        show_symbol_details = true,
        show_symbol_lineno = false,
        highlight_hovered_item = true,
        auto_set_cursor = true,
        auto_update_events = {
          follow = { "CursorMoved" },
          items = { "InsertLeave", "WinEnter", "BufEnter", "BufWinEnter", "TabEnter", "BufWritePost" },
        },
      },
      guides = {
        enabled = true,
        markers = {
          bottom = "‚îî",
          middle = "‚îú",
          vertical = "‚îÇ",
        },
      },
      symbol_folding = {
        autofold_depth = 1,
        auto_unfold = {
          hovered = true,
          only = true,
        },
        markers = { "", "" },
      },
      preview_window = {
        auto_preview = false,
        open_hover_on_preview = false,
        width = 50,
        min_width = 50,
        relative_width = true,
        border = "single",
        winhl = "NormalFloat:",
        winblend = 0,
        live = false,
      },
      keymaps = {
        show_help = "?",
        close = { "<Esc>", "q" },
        goto_location = "<Cr>",
        peek_location = "o",
        goto_and_close = "<S-Cr>",
        restore_location = "<C-g>",
        hover_symbol = "<C-space>",
        toggle_preview = "K",
        rename_symbol = "r",
        code_actions = "a",
        fold = "h",
        unfold = "l",
        fold_toggle = "<Tab>",
        fold_toggle_all = "<S-Tab>",
        fold_all = "W",
        unfold_all = "E",
        fold_reset = "R",
        down_and_jump = "<C-j>",
        up_and_jump = "<C-k>",
      },
      providers = {
        priority = { "lsp", "coc", "markdown", "norg" },
        lsp = {
          blacklist_clients = {},
        },
      },
      symbols = {
        icons = {
          File = { icon = "Û∞àî", hl = "Identifier" },
          Module = { icon = "Û∞Üß", hl = "Include" },
          Namespace = { icon = "Û∞Ö™", hl = "Include" },
          Package = { icon = "Û∞èó", hl = "Include" },
          Class = { icon = "ùìí", hl = "Type" },
          Method = { icon = "∆í", hl = "Function" },
          Property = { icon = "", hl = "Identifier" },
          Field = { icon = "Û∞Ü®", hl = "Identifier" },
          Constructor = { icon = "", hl = "Special" },
          Enum = { icon = "‚Ñ∞", hl = "Type" },
          Interface = { icon = "Û∞ú∞", hl = "Type" },
          Function = { icon = "", hl = "Function" },
          Variable = { icon = "", hl = "Constant" },
          Constant = { icon = "", hl = "Constant" },
          String = { icon = "ùìê", hl = "String" },
          Number = { icon = "#", hl = "Number" },
          Boolean = { icon = "‚ä®", hl = "Boolean" },
          Array = { icon = "Û∞Ö™", hl = "Constant" },
          Object = { icon = "‚¶ø", hl = "Type" },
          Key = { icon = "üîê", hl = "Type" },
          Null = { icon = "NULL", hl = "Type" },
          EnumMember = { icon = "", hl = "Identifier" },
          Struct = { icon = "ùì¢", hl = "Structure" },
          Event = { icon = "üó≤", hl = "Type" },
          Operator = { icon = "+", hl = "Identifier" },
          TypeParameter = { icon = "ùôè", hl = "Identifier" },
          Component = { icon = "Û∞Ö¥", hl = "Function" },
          Fragment = { icon = "Û∞Ö¥", hl = "Constant" },
          TypeAlias = { icon = " ", hl = "Type" },
          Parameter = { icon = " ", hl = "Identifier" },
          StaticMethod = { icon = " ", hl = "Function" },
          Macro = { icon = " ", hl = "Function" },
        },
      },
    },
  },

  -- Breadcrumbs in statusline
  {
    "SmiteshP/nvim-navic",
    lazy = true,
    init = function()
      vim.g.navic_silence = true
    end,
    opts = function()
      return {
        separator = " ",
        highlight = true,
        depth_limit = 5,
        icons = {
          File = "Û∞àî ",
          Module = "Û∞Üß ",
          Namespace = "Û∞Ö™ ",
          Package = "Û∞èó ",
          Class = "ùìí ",
          Method = "∆í ",
          Property = " ",
          Field = "Û∞Ü® ",
          Constructor = " ",
          Enum = "‚Ñ∞ ",
          Interface = "Û∞ú∞ ",
          Function = " ",
          Variable = " ",
          Constant = " ",
          String = "ùìê ",
          Number = "# ",
          Boolean = "‚ä® ",
          Array = "Û∞Ö™ ",
          Object = "‚¶ø ",
          Key = "üîê ",
          Null = "NULL ",
          EnumMember = " ",
          Struct = "ùì¢ ",
          Event = "üó≤ ",
          Operator = "+ ",
          TypeParameter = "ùôè ",
        },
      }
    end,
  },

}
